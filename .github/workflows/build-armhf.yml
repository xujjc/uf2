name: Build Canon ARMHF Driver

on:
  workflow_dispatch:
  push:
    branches: [main, master]

jobs:
  cross-compile:
    runs-on: ubuntu-22.04  # 使用兼容性更好的 22.04 基础环境
    
    steps:
    - name: Checkout source
      uses: actions/checkout@v4
      with:
        repository: random3231/cndrvcups-lb
        path: cndrvcups-lb
        
    - name: Setup cross-compilation environment
      run: |
        # 添加多架构支持
        sudo dpkg --add-architecture armhf
        
        # 添加兼容的 Ubuntu 22.04 源（支持 armhf）
        echo "deb [arch=amd64,armhf] http://archive.ubuntu.com/ubuntu jammy main restricted universe multiverse" | sudo tee /etc/apt/sources.list.d/jammy.list
        echo "deb [arch=amd64,armhf] http://security.ubuntu.com/ubuntu jammy-security main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list.d/jammy.list
        echo "deb [arch=amd64,armhf] http://archive.ubuntu.com/ubuntu jammy-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list.d/jammy.list
        echo "deb [arch=amd64,armhf] http://archive.ubuntu.com/ubuntu jammy-backports main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list.d/jammy.list
        
        # 安装基本工具和密钥
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates ubuntu-keyring
        
        # 安装交叉编译工具链
        sudo apt-get install -y \
          crossbuild-essential-armhf \
          binutils-arm-linux-gnueabihf \
          gcc-arm-linux-gnueabihf \
          g++-arm-linux-gnueabihf
        
        # 安装 ARMHF 依赖库
        sudo apt-get install -y \
          libcups2-dev:armhf \
          libxml2-dev:armhf \
          libglib2.0-dev:armhf \
          libtiff-dev:armhf \
          libpng-dev:armhf \
          libjpeg-dev:armhf \
          libusb-1.0-0-dev:armhf
        
    - name: Configure build
      working-directory: cndrvcups-lb
      env:
        CC: arm-linux-gnueabihf-gcc
        CXX: arm-linux-gnueabihf-g++
        AR: arm-linux-gnueabihf-ar
        RANLIB: arm-linux-gnueabihf-ranlib
        CFLAGS: "-O2 -march=armv7-a -mfpu=neon-vfpv4 -mfloat-abi=hard"
        CXXFLAGS: "-O2 -march=armv7-a -mfpu=neon-vfpv4 -mfloat-abi=hard"
        LDFLAGS: "-Wl,--no-as-needed"
      run: |
        # 自动生成配置脚本
        if [ -f autogen.sh ]; then
          NOCONFIGURE=1 ./autogen.sh
        elif [ -f configure.ac ]; then
          autoreconf -vif
        fi
        
        # 配置编译选项
        ./configure \
          --host=arm-linux-gnueabihf \
          --prefix=/usr \
          --libdir=/usr/lib/arm-linux-gnueabihf \
          --enable-progpath=/usr/bin \
          --disable-static \
          --enable-shared
        
    - name: Compile driver
      working-directory: cndrvcups-lb
      run: |
        # 并行编译并捕获错误
        make -j$(($(nproc) + 1)) || make  # 回退到单线程编译
        
        # 验证编译结果
        if ! file cndrvcups-* | grep -q "ARM"; then
          echo "❌ 编译结果不是ARM架构"
          exit 1
        fi
        
    - name: Package artifacts
      run: |
        # 创建标准化输出目录
        mkdir -p output/{DEBIAN,usr/lib,etc/udev/rules.d}
        cd cndrvcups-lb
        
        # 安装到临时目录
        make install DESTDIR=$(pwd)/../output
        
        # 添加控制文件
        cat << 'EOF' > ../output/DEBIAN/control
        Package: cndrvcups-lb
        Version: 1.0-$(date +%Y%m%d)
        Architecture: armhf
        Maintainer: GitHub Actions
        Description: Canon Printer Driver for ARMv7
        EOF
        
        # 添加udev规则
        echo 'ATTRS{idVendor}=="04a9", MODE="0666", GROUP="lp"' > ../output/etc/udev/rules.d/80-canon.rules
        
        # 创建安装后脚本
        cat << 'EOF' > ../output/DEBIAN/postinst
        #!/bin/bash
        set -e
        ldconfig
        udevadm control --reload
        udevadm trigger
        systemctl restart cups
        EOF
        chmod 755 ../output/DEBIAN/postinst
        
        # 构建DEB包
        cd ../output
        dpkg-deb --build . ../canon-driver-armhf.deb
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: canon-driver-armhf
        path: |
          canon-driver-armhf.deb
          output/usr/bin/*
