name: Compile ARMHF Driver for Canon MF4452

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout with Submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive  # 递归克隆所有子模块
        fetch-depth: 0         # 需要完整历史记录

    - name: Debug Directory Structure
      run: |
        echo "Workspace path: $GITHUB_WORKSPACE"
        ls -R $GITHUB_WORKSPACE

    - name: Install Dependencies
      run: |
        sudo dpkg --add-architecture armhf
        sudo apt update
        sudo apt install -y \
          build-essential autoconf libtool pkg-config \
          libcups2-dev:armhf libusb-1.0-0-dev:armhf libxml2-dev:armhf \
          libjpeg-dev:armhf libtiff-dev:armhf git cmake \
          crossbuild-essential-armhf qemu-user-static \
          binfmt-support devscripts fakeroot

    - name: Setup Cross-Compilation
      run: |
        # 设置交叉编译环境变量
        echo "CC=arm-linux-gnueabihf-gcc" >> $GITHUB_ENV
        echo "CXX=arm-linux-gnueabihf-g++" >> $GITHUB_ENV
        echo "CFLAGS=-march=armv7-a -mtune=cortex-a9 -mfpu=neon -mfloat-abi=hard --sysroot=/usr/arm-linux-gnueabihf" >> $GITHUB_ENV
        echo "CXXFLAGS=$CFLAGS" >> $GITHUB_ENV
        echo "LDFLAGS=--sysroot=/usr/arm-linux-gnueabihf" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=/usr/arm-linux-gnueabihf/lib/arm-linux-gnueabihf/pkgconfig" >> $GITHUB_ENV

    - name: Build Dependency Library
      run: |
        # 构建子模块依赖
        cd $GITHUB_WORKSPACE/libs/cnacom
        make clean
        make ARCH=armhf CC=${{ env.CC }} CXX=${{ env.CXX }} CFLAGS="${{ env.CFLAGS }}"

        # 创建本地sysroot目录
        mkdir -p $GITHUB_WORKSPACE/sysroot/usr/lib/arm-linux-gnueabihf
        cp libcnacbcom.so $GITHUB_WORKSPACE/sysroot/usr/lib/arm-linux-gnueabihf/

    - name: Configure Project
      run: |
        # 配置项目
        cd $GITHUB_WORKSPACE
        ./autogen.sh
        ./configure \
          --prefix=/usr \
          --host=arm-linux-gnueabihf \
          --with-sysroot=/usr/arm-linux-gnueabihf \
          CC=${{ env.CC }} \
          CXX=${{ env.CXX }} \
          CFLAGS="${{ env.CFLAGS }}" \
          CXXFLAGS="${{ env.CXXFLAGS }}" \
          LDFLAGS="${{ env.LDFLAGS }}"

    - name: Compile Driver
      run: |
        # 设置动态库路径并编译
        export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/sysroot/usr/lib/arm-linux-gnueabihf:$LD_LIBRARY_PATH
        make -j$(nproc)

    - name: Package Artifacts
      run: |
        # 打包构件
        mkdir -p ./artifacts
        find src/ -name "*.so" -exec cp --parents {} ./artifacts/ \;
        cp cndrvcups-lb.ppd ./artifacts/ || echo "PPD file not found"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: armhf-driver
        path: ./artifacts/*

    # 可选：私有子模块处理（需要配置secrets.SUBMODULE_SSH_KEY）
    # - name: Checkout Private Submodule
    #   uses: actions/checkout@v4
    #   with:
    #     repository: your-org/private-submodule
    #     path: libs/private-submodule
    #     ssh-key: ${{ secrets.SUBMODULE_SSH_KEY }}
