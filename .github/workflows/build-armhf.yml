name: Build Canon UFR II ARMHF Driver (Kernel-independent)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  ARCH: armhf
  CROSS_PREFIX: arm-linux-gnueabihf
  DRIVER_NAME: ufr2-driver
  DRIVER_URL: https://gdlp01.c-wss.com/gds/7/0100006587/01/linux-ufr2-drv-v590-uken-05.tar.gz
  DRIVER_SHA256: 12ab34cd56ef78gh90ij12kl34mn56op78qr90st12uv34wx56yz78ab90cd12ef  # 替换实际校验值

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    - name: Setup cross-compiler
      run: |
        sudo dpkg --add-architecture ${{ env.ARCH }}
        sudo apt update
        sudo apt install -y \
          crossbuild-essential-${{ env.ARCH }} \
          gcc-${{ env.CROSS_PREFIX }} \
          libcups2-dev:${{ env.ARCH }} \
          libtiff-dev:${{ env.ARCH }} \
          libjpeg-dev:${{ env.ARCH }} \
          libpng-dev:${{ env.ARCH }}
          
    - name: Download UFR II driver
      run: |
        wget ${{ env.DRIVER_URL }} -O ${{ env.DRIVER_NAME }}.tar.gz
        echo "${{ env.DRIVER_SHA256 }} ${{ env.DRIVER_NAME }}.tar.gz" | sha256sum -c
        tar xzf ${{ env.DRIVER_NAME }}.tar.gz --strip-components=1
        
    - name: Configure cross-compile
      shell: bash
      run: |
        cat << EOF > cross_env.ufr2
        export ARCH=arm
        export CC=${{ env.CROSS_PREFIX }}-gcc
        export CXX=${{ env.CROSS_PREFIX }}-g++
        export STRIP=${{ env.CROSS_PREFIX }}-strip
        export CFLAGS="-Os -march=armv7-a -mtune=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard"
        EOF

    - name: Build userspace components
      run: |
        source cross_env.ufr2
        
        # 进入UFR II驱动目录
        cd UFRII
        ./configure \
          --host=${{ env.CROSS_PREFIX }} \
          --disable-static \
          --disable-kbuild \
          --prefix=/usr
        
        make -j$(nproc) filter
        
        # 提取关键文件
        mkdir -p ../ufr2-bin
        cp -v filter/*ufr* ../ufr2-bin/
        cp -v *.so* ../ufr2-bin/
        cd ..

    - name: Package universal driver
      run: |
        # 创建标准目录结构
        mkdir -p output/usr/lib/cups/filter
        mkdir -p output/usr/share/ppd/canon
        mkdir -p output/usr/share/ufr2
        
        # 复制二进制文件和依赖
        install -m755 ufr2-bin/*ufr* output/usr/lib/cups/filter/
        install -m644 ufr2-bin/*.so* output/usr/lib/${{ env.CROSS_PREFIX }}/
        cp -r PPD/* output/usr/share/ppd/canon/
        cp -r Doc/* output/usr/share/ufr2/
        
        # 创建自动安装脚本
        cat << 'EOF' > output/install-ufr2.sh
        #!/bin/bash
        # Install UFR II components
        sudo cp -r usr /
        
        # Register PPD files
        sudo lpadmin -p Canon_UFRII -m canonufr2.ppd -E -v socket://printer-ip:9100
        
        # Set permissions
        sudo chmod 755 /usr/lib/cups/filter/*
        sudo chown root:root /usr/lib/cups/filter/*
        
        # Reload CUPS
        sudo systemctl restart cups
        echo "UFR II driver installed. Printer name: Canon_UFRII"
        EOF
        chmod +x output/install-ufr2.sh
        
        # 创建压缩包
        tar czvf ufr2-armhf-universal-$(date +%Y%m%d).tar.gz -C output .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ufr2-armhf-driver
        path: ufr2-armhf-universal-*.tar.gz

    - name: Generate README
      run: |
        cat << EOF > UFR2-README.md
        # Canon UFR II ARMHF Universal Driver
        
        ## Supported Devices
        - imageCLASS MF644Cdw
        - imageCLASS LBP623Cdw
        - MAXIFY MB2720
        - 及其他标有"UFR II"的佳能设备
        
        ## Installation
        1. Transfer package to device:
           scp ufr2-armhf-universal-*.tar.gz pi@raspberrypi:~
           
        2. On target device:
           tar xzf ufr2-armhf-universal-*.tar.gz
           sudo ./install-ufr2.sh
           
        3. Install dependencies:
           sudo apt install libtiff5 libjpeg62-turbo libpng16-16
           
        ## Configuration
        - Web Interface: http://localhost:631
        - Driver Location: /usr/lib/cups/filter/
        - PPD Files: /usr/share/ppd/canon/
        
        ## Verification
           /usr/lib/cups/filter/pstoufr2cpca -v
        EOF
