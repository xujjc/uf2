name: Build Canon ARMHF Driver

on:
  workflow_dispatch:
  push:
    branches: [main, master]

jobs:
  cross-compile:
    runs-on: ubuntu-22.04
    env:
      ARCH: armhf
      HOST_TRIPLET: arm-linux-gnueabihf
      DEBIAN_SUITE: bookworm
    
    steps:
    - name: Checkout source
      uses: actions/checkout@v4
      with:
        repository: random3231/cndrvcups-lb
        path: cndrvcups-lb

    - name: Setup cross-compilation environment
      run: |
        # 安全添加多架构支持
        sudo dpkg --add-architecture $ARCH
        
        # 使用官方源避免清空配置
        sudo tee /etc/apt/sources.list << EOF
        deb http://deb.debian.org/debian $DEBIAN_SUITE main
        deb http://deb.debian.org/debian $DEBIAN_SUITE-updates main
        deb http://security.debian.org/debian-security $DEBIAN_SUITE-security main
        EOF
        
        # 添加ARM架构源
        sudo tee /etc/apt/sources.list.d/$ARCH.list << EOF
        deb [arch=$ARCH] http://deb.debian.org/debian $DEBIAN_SUITE main
        deb [arch=$ARCH] http://deb.debian.org/debian $DEBIAN_SUITE-updates main
        deb [arch=$ARCH] http://security.debian.org/debian-security $DEBIAN_SUITE-security main
        EOF
        
        # 更新源并安装工具链
        sudo apt-get update
        sudo apt-get install -y \
          crossbuild-essential-$ARCH \
          binutils-$HOST_TRIPLET \
          gcc-$HOST_TRIPLET \
          g++-$HOST_TRIPLET \
          pkg-config-$HOST_TRIPLET \
          ccache

        # 安装ARMHF编译依赖
        sudo apt-get install -y \
          libcups2-dev:$ARCH \
          libxml2-dev:$ARCH \
          libglib2.0-dev:$ARCH \
          libtiff-dev:$ARCH \
          libpng-dev:$ARCH \
          libjpeg-dev:$ARCH \
          libusb-1.0-0-dev:$ARCH

    - name: Configure build
      working-directory: cndrvcups-lb
      env:
        CC: ccache $HOST_TRIPLET-gcc
        CXX: ccache $HOST_TRIPLET-g++
        AR: $HOST_TRIPLET-ar
        RANLIB: $HOST_TRIPLET-ranlib
        PKG_CONFIG_PATH: /usr/lib/$HOST_TRIPLET/pkgconfig
        CFLAGS: "-O2 -march=armv7-a -mtune=cortex-a72 -mfpu=neon-vfpv4 -mfloat-abi=hard"
        CXXFLAGS: "-O2 -march=armv7-a -mtune=cortex-a72 -mfpu=neon-vfpv4 -mfloat-abi=hard"
      run: |
        # 自动生成配置
        [[ -f autogen.sh ]] && NOCONFIGURE=1 ./autogen.sh || autoreconf -fiv
        
        # 配置编译选项（使用更安全的路径参数）
        ./configure \
          --host=$HOST_TRIPLET \
          --prefix=/usr \
          --libdir=/usr/lib/$HOST_TRIPLET \
          --sysconfdir=/etc \
          --with-cupsfilterdir=/usr/lib/cups/filter \
          --with-cupsppddir=/usr/share/cups/model \
          --disable-static

    - name: Compile driver
      working-directory: cndrvcups-lb
      run: |
        # 使用ccache加速编译
        ccache -M 1G
        ccache -s
        
        # 并行编译并验证
        make -j$(($(nproc)*2))
        find . -executable -type f -exec file {} + | grep "ARM"

    - name: Create debian package
      run: |
        PKG_DIR=canon-driver-armhf
        mkdir -p $PKG_DIR/{DEBIAN,usr/lib/cups/filter,usr/share/cups/model,etc/udev/rules.d}
        
        # 安装到打包目录
        cd cndrvcups-lb
        make install DESTDIR=../$PKG_DIR
        
        # 自动生成依赖列表
        cd ..
        dpkg-shlibdeps -O $PKG_DIR/usr/lib/$HOST_TRIPLET/*.so | \
          awk -F= '{print "Depends: " $2}' > $PKG_DIR/DEBIAN/dependencies
        
        # 创建控制文件
        cat > $PKG_DIR/DEBIAN/control << EOF
        Package: cndrvcups-lb
        Version: 1.0-$(date +%Y%m%d%H%M)
        Architecture: armhf
        Maintainer: GitHub Actions
        Description: Canon Printer Driver for ARMv7
        $(cat $PKG_DIR/DEBIAN/dependencies)
        EOF
        
        # 添加udev规则
        echo 'ACTION=="add", SUBSYSTEM=="usb", ATTRS{idVendor}=="04a9", MODE="0664", GROUP="lp"' > $PKG_DIR/etc/udev/rules.d/85-canon-printer.rules
        
        # 创建安装后脚本
        cat > $PKG_DIR/DEBIAN/postinst << EOF
        #!/bin/sh
        set -e
        [ "\$1" = "configure" ] || exit 0
        /bin/systemctl daemon-reload
        /bin/systemctl restart cups.service
        EOF
        chmod 755 $PKG_DIR/DEBIAN/postinst
        
        # 构建DEB包
        dpkg-deb -Zxz -z9 --build $PKG_DIR
        mv $PKG_DIR.deb canon-driver-armhf.deb

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: canon-driver-armhf
        path: |
          canon-driver-armhf.deb
          cndrvcups-lb/config.log  # 包含调试信息
